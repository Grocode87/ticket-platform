import Head from "next/head";
import Image from "next/image";
import { useContext, useEffect, useState } from "react";
import TierListing from "../components/TierListing";
import styles from "../styles/Home.module.css";
import axios from 'axios';
import { CartDispatchContext, setAccessCode } from "../context/cart";

/**
 * FRONTEND TODO TMRW
 * - on home page, retrieve ticket info from db DONE
 * 
 * - when a buy now is pressed - add ticket and guestlist code to a global cart object DONE
 * 
 * - on checkout page - Add form validation for name and email DONE
 * - pass email, name, ticket priceID, and guestlist code to checkout session DONE
 * - when go to checkout is pressed - confirm that the ticket is still avaliable
 * 
 * - add payment success page
 * - add payment fail page
 * 
 * - properly send ticket to email
 * 
 * TO MAKE PRETTY
 * - home page
 * - make home page contain event details
 * - add nice header to checkout
 * - add powered by stripe to checkout
 * - Make checkout look a lil better
 * - add proper ticket preview to checkout - include ticket details
 * 
 * - finish ticket email
 * - contain event time and details
 * - thank you for purchase and stuff
 * 
 * - finish ticket pdf
 * - same as above, include some event info
 * - explain that it needs to be presented at the door
 * 
 * 
 */
export default function Home() {
  const [code, setCode] = useState("")
  const [validCode, setValidCode] = useState(false);
  const [codeMsg, setCodeMsg] = useState("");
  const [prices, setPrices] = useState([])

  const dispatch = useContext(CartDispatchContext);


  useEffect(() => {
    axios.get("/api/get_prices").then(res => {
      console.log(res.data.data)
      setPrices(res.data.data.sort((first, second) => {
        return (first.id > second.id) ? 1 : -1
      }))
    })
  }, [])

  const handleAccessCodeChange = (e) => {
    setCode(e.target.value)
    if(e.target.value.length >= 6) {
      checkValidCode(e.target.value)
    }
  }

  const checkValidCode = (code) => {
    console.log("checking...")
    if(!code || code.length < 2) {
      return
    }
    axios.get("/api/check_code?code=" + code)
    .then(res => {
      console.log("checked")
      if(!res.data.valid) {
        setCodeMsg("Invalid code")
        console.log("invalid")
      } else {
        setCodeMsg("")
        setValidCode(res.data.valid)
        setAccessCode(dispatch, code)
      }
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Koachella 2022</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <div className="flex">
          <div className="w-full lg:w-1/2 m-auto text-center">
            <Image src="/images/banner.jpg" width="1000" height="400"/>
           

            {!validCode && (
            <div className="border py-8 shadow-md">
              <p className="text-2xl font-bold">Get a Ticket</p>
              <p>
              
              </p>

              <div className="pt-4">
                <p className="pb-2 font-semibold">
                  Enter Your Access Code
                </p>
                <input
                  className="border-2 rounded-lg py-1 px-2 w-20 text-lg"
                  type="text"
                  placeholder="A1B2C3"
                  onInput={handleAccessCodeChange}
                />
                
                <div><p className="text-red-600">{codeMsg}</p></div>
              </div>
            </div>
            )}

            {validCode && (
              <>
                <div className="flex flex-col items-center pt-6 mx-4">
                  {prices.map(price => {
                    return (
                      <TierListing key={price.id} data={price}/>
                    )
                  })}
                </div>
                <p>Transactions are made using Stripe - </p>
              </>
            )}
          </div>
        </div>
    </div>
  );
}
